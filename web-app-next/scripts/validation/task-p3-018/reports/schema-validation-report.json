{
  "schemaValidation": [
    {
      "name": "文件存在性检查 - OpenAPI规范文档",
      "status": "pass",
      "message": "文件存在: docs/api/openapi.yaml"
    },
    {
      "name": "文件存在性检查 - AsyncAPI规范文档",
      "status": "pass",
      "message": "文件存在: docs/api/async-api.yaml"
    },
    {
      "name": "YAML语法验证 - OpenAPI文档",
      "status": "pass",
      "message": "YAML语法正确"
    },
    {
      "name": "YAML语法验证 - AsyncAPI文档",
      "status": "pass",
      "message": "YAML语法正确"
    },
    {
      "name": "OpenAPI结构验证 - openapi字段",
      "status": "pass",
      "message": "openapi字段存在"
    },
    {
      "name": "OpenAPI结构验证 - info字段",
      "status": "pass",
      "message": "info字段存在"
    },
    {
      "name": "OpenAPI结构验证 - paths字段",
      "status": "pass",
      "message": "paths字段存在"
    },
    {
      "name": "OpenAPI结构验证 - components字段",
      "status": "pass",
      "message": "components字段存在"
    },
    {
      "name": "OpenAPI版本验证",
      "status": "pass",
      "message": "使用OpenAPI 3.0版本: 3.0.3"
    },
    {
      "name": "OpenAPI Info验证 - title",
      "status": "pass",
      "message": "info.title存在"
    },
    {
      "name": "OpenAPI Info验证 - version",
      "status": "pass",
      "message": "info.version存在"
    },
    {
      "name": "OpenAPI Info验证 - description",
      "status": "pass",
      "message": "info.description存在"
    },
    {
      "name": "OpenAPI Schema定义数量",
      "status": "pass",
      "message": "定义了 12 个Schema",
      "details": {
        "schemaCount": 12,
        "schemas": [
          "ApiResponse",
          "PaginatedResponse",
          "Pagination",
          "UserInfo",
          "LoginRequest",
          "LoginResponse",
          "Product",
          "TraceabilityInfo",
          "TraceEvent",
          "Attachment",
          "TraceInfo",
          "ErrorResponse"
        ]
      }
    },
    {
      "name": "核心Schema验证 - ApiResponse",
      "status": "pass",
      "message": "核心Schema ApiResponse 已定义"
    },
    {
      "name": "核心Schema验证 - UserInfo",
      "status": "pass",
      "message": "核心Schema UserInfo 已定义"
    },
    {
      "name": "核心Schema验证 - Product",
      "status": "pass",
      "message": "核心Schema Product 已定义"
    },
    {
      "name": "核心Schema验证 - TraceInfo",
      "status": "pass",
      "message": "核心Schema TraceInfo 已定义"
    },
    {
      "name": "核心Schema验证 - LoginRequest",
      "status": "pass",
      "message": "核心Schema LoginRequest 已定义"
    },
    {
      "name": "核心Schema验证 - LoginResponse",
      "status": "pass",
      "message": "核心Schema LoginResponse 已定义"
    },
    {
      "name": "核心Schema验证 - ErrorResponse",
      "status": "pass",
      "message": "核心Schema ErrorResponse 已定义"
    },
    {
      "name": "OpenAPI路径定义数量",
      "status": "pass",
      "message": "定义了 9 个API路径",
      "details": {
        "pathCount": 9,
        "paths": [
          "/auth/login",
          "/auth/logout",
          "/auth/verify",
          "/auth/status",
          "/users/profile",
          "/products",
          "/products/{id}",
          "/trace/{id}",
          "/trace/{id}/verify"
        ]
      }
    },
    {
      "name": "核心API验证 - /auth/login",
      "status": "pass",
      "message": "核心API /auth/login 已定义"
    },
    {
      "name": "核心API验证 - /auth/logout",
      "status": "pass",
      "message": "核心API /auth/logout 已定义"
    },
    {
      "name": "核心API验证 - /products",
      "status": "pass",
      "message": "核心API /products 已定义"
    },
    {
      "name": "核心API验证 - /products/{id}",
      "status": "pass",
      "message": "核心API /products/{id} 已定义"
    },
    {
      "name": "核心API验证 - /trace/{id}",
      "status": "pass",
      "message": "核心API /trace/{id} 已定义"
    },
    {
      "name": "AsyncAPI结构验证 - asyncapi字段",
      "status": "pass",
      "message": "asyncapi字段存在"
    },
    {
      "name": "AsyncAPI结构验证 - info字段",
      "status": "pass",
      "message": "info字段存在"
    },
    {
      "name": "AsyncAPI结构验证 - channels字段",
      "status": "pass",
      "message": "channels字段存在"
    },
    {
      "name": "AsyncAPI结构验证 - components字段",
      "status": "pass",
      "message": "components字段存在"
    },
    {
      "name": "AsyncAPI版本验证",
      "status": "pass",
      "message": "使用AsyncAPI 2.x版本: 2.6.0"
    },
    {
      "name": "AsyncAPI频道定义数量",
      "status": "pass",
      "message": "定义了 6 个消息频道",
      "details": {
        "channelCount": 6,
        "channels": [
          "farming/events",
          "processing/events",
          "logistics/events",
          "system/events",
          "trace/aggregated",
          "notifications/realtime"
        ]
      }
    },
    {
      "name": "核心频道验证 - farming/events",
      "status": "pass",
      "message": "核心频道 farming/events 已定义"
    },
    {
      "name": "核心频道验证 - processing/events",
      "status": "pass",
      "message": "核心频道 processing/events 已定义"
    },
    {
      "name": "核心频道验证 - logistics/events",
      "status": "pass",
      "message": "核心频道 logistics/events 已定义"
    },
    {
      "name": "核心频道验证 - system/events",
      "status": "pass",
      "message": "核心频道 system/events 已定义"
    },
    {
      "name": "核心频道验证 - trace/aggregated",
      "status": "pass",
      "message": "核心频道 trace/aggregated 已定义"
    },
    {
      "name": "AsyncAPI消息定义数量",
      "status": "pass",
      "message": "定义了 17 个消息类型",
      "details": {
        "messageCount": 17,
        "messages": [
          "PlantingEvent",
          "FertilizingEvent",
          "HarvestEvent",
          "QualityCheckEvent",
          "CleaningEvent",
          "PackagingEvent",
          "QualityTestEvent",
          "StorageEvent",
          "ShipmentEvent",
          "DeliveryEvent",
          "InventoryEvent",
          "TemperatureEvent",
          "UserActionEvent",
          "DataChangeEvent",
          "SystemAlertEvent",
          "TraceAggregatedEvent",
          "RealtimeNotification"
        ]
      }
    },
    {
      "name": "AsyncAPI Schema定义数量",
      "status": "pass",
      "message": "定义了 25 个事件Schema",
      "details": {
        "schemaCount": 25,
        "schemas": [
          "BaseEvent",
          "PlantingEventPayload",
          "FertilizingEventPayload",
          "HarvestEventPayload",
          "QualityCheckEventPayload",
          "CleaningEventPayload",
          "PackagingEventPayload",
          "QualityTestEventPayload",
          "StorageEventPayload",
          "ShipmentEventPayload",
          "DeliveryEventPayload",
          "InventoryEventPayload",
          "TemperatureEventPayload",
          "UserActionEventPayload",
          "DataChangeEventPayload",
          "SystemAlertEventPayload",
          "TraceAggregatedEventPayload",
          "RealtimeNotificationPayload",
          "UserInfo",
          "Product",
          "TraceabilityInfo",
          "TraceEvent",
          "Attachment",
          "BatchInfo",
          "LogisticsInfo"
        ]
      }
    },
    {
      "name": "Schema版本一致性",
      "status": "pass",
      "message": "两个Schema版本一致: 1.0.0-baseline"
    },
    {
      "name": "基础格式一致性",
      "status": "pass",
      "message": "REST API响应格式和事件格式均已定义"
    },
    {
      "name": "数据模型一致性 - UserInfo",
      "status": "pass",
      "message": "UserInfo在两个Schema中均有定义"
    },
    {
      "name": "数据模型一致性 - Product",
      "status": "pass",
      "message": "Product在两个Schema中均有定义"
    },
    {
      "name": "文件存在性检查 - Mock API - login",
      "status": "pass",
      "message": "文件存在: web-app-next/src/app/api/auth/login/route.ts"
    },
    {
      "name": "Mock API兼容性 - login",
      "status": "pass",
      "message": "使用标准化API响应格式"
    },
    {
      "name": "文件存在性检查 - Mock API - products",
      "status": "pass",
      "message": "文件存在: web-app-next/src/app/api/products/route.ts"
    },
    {
      "name": "Mock API兼容性 - products",
      "status": "pass",
      "message": "使用标准化API响应格式"
    },
    {
      "name": "文件存在性检查 - Mock API - [id]",
      "status": "pass",
      "message": "文件存在: web-app-next/src/app/api/trace/[id]/route.ts"
    },
    {
      "name": "Mock API兼容性 - [id]",
      "status": "pass",
      "message": "使用标准化API响应格式"
    },
    {
      "name": "Mock API整体兼容性",
      "status": "pass",
      "message": "3/3 个Mock API使用标准格式",
      "details": {
        "compatibleCount": 3,
        "totalCount": 3
      }
    }
  ],
  "summary": {
    "total": 50,
    "passed": 50,
    "warnings": 0,
    "failed": 0
  },
  "timestamp": "2025-06-03T17:52:06.115Z"
}