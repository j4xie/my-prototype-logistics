---
description: 
globs: **/*.jsx,**/*.js,**/*.tsx,**/*.ts,web-app/**/*.jsx,web-app/ **/*.js
alwaysApply: false
---
---
description: UI设计系统与组件规范 - 开发React/Next.js前端组件时 - 实现UI界面和样式时 - 使用Shadcn UI、Tailwind CSS时 - 遵循Neo Minimal iOS-Style Admin UI设计语言
globs: **/*.tsx, **/*.jsx, **/*.ts, **/*.js
alwaysApply: false
---

# UI设计系统与组件规范

## 使用场景
- 开发React/Next.js前端组件时
- 实现UI界面和样式时
- 使用Shadcn UI、Tailwind CSS时

## 关键规则
- 使用Shadcn UI和Tailwind进行组件开发和样式设计
- 实现响应式设计，采用移动优先方法
- 使用 `next/image` 包处理图片
- 遵循"Neo Minimal iOS-Style Admin UI"设计语言
- 所有交互元素必须支持 :hover, :focus, :active 状态
- 使用描述性的变量和函数名，事件函数以"handle"前缀命名
- 优先使用早期返回提高代码可读性
- 实现无障碍功能，添加适当的aria-label和语义角色
- **目录结构变更时必须同步更新目录结构文档**：
  - 更新 [DIRECTORY_STRUCTURE.md](mdc:DIRECTORY_STRUCTURE.md) 保持当前最新目录结构（仅包含：1.根目录结构、2.web-app目录结构、3.目录结构说明表格）
  - 在 [docs/directory-structure-changelog.md](mdc:docs/directory-structure-changelog.md) 记录变更历史（包含：历史更新记录、进展说明、变更详情）

## UI框架技术规范

### Shadcn组件安装
```sh
pnpm dlx shadcn@latest add COMPONENT
```

### 数据获取使用SWR
```typescript
const { data, isLoading, error } = useSWR<ResponseType>(
  `/api/endpoint?param=${value}`
);
```

### 加载状态处理
```tsx
<Card>
  <LoadingContent loading={isLoading} error={error}>
    {data && <MyComponent data={data} />}
  </LoadingContent>
</Card>
```

## 设计系统规范

### 布局标准
- 内容容器最大宽度：`max-w-[390px]`
- 居中布局：`mx-auto`
- 页面包装器：`flex flex-col min-h-screen`
- 主内容区域：`pt-[80px]` 避免与固定导航重叠
- 底部标签栏时：`pb-[80px]`

### 顶部导航（固定）
- 样式：`fixed top-0 left-0 right-0 z-[999] bg-[#1890FF] text-white shadow-sm`
- 左侧：返回图标和页面标题
- 右侧：图标按钮（铃铛、设置等），确保间距和可点击性

### 卡片设计
- 所有内容块：`bg-white rounded-lg shadow-sm p-4`
- 标题：`text-lg font-medium text-gray-900`
- 副文本：`text-sm text-gray-600`
- 网格布局：`grid-cols-2 gap-4`

### 用户信息卡片
- 包含头像、问候语（你好，张三）、班次（早班）、权限标签
- 角色标签：`rounded-full text-xs bg-[#E6F7FF] text-[#1890FF] px-2 py-0.5`

### 统计卡片
- 右侧图标块使用柔和背景（如 `bg-icon-primary`）
- 数字突出显示：`text-2xl font-medium text-gray-900`
- 颜色：警告用 `text-[#FF4D4F]`，成功用 `#52C41A`

### 快速操作
- 两列布局：`grid grid-cols-2 gap-4`
- 每个按钮：垂直堆叠图标+标签
- 背景：`bg-icon-success`, `bg-icon-warning`, `bg-icon-purple`
- 悬停效果：`hover:shadow-md hover:scale-[1.03]`
- 无权限时禁用或灰化，可选显示锁图标

### 底部标签栏
- 样式：`fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200`
- 布局：`flex justify-around`
- 标签项：垂直堆叠（图标+标签），`text-xs mt-1`
- 活动标签：`text-[#1890FF]` 和可选指示条

## 示例
<example>
  **正确的组件实现**：
  ```tsx
  const handleUserClick = () => {
    // 处理用户点击
  };
  
  return (
    <div className="max-w-[390px] mx-auto">
      <Card className="bg-white rounded-lg shadow-sm p-4">
        <h2 className="text-lg font-medium text-gray-900">用户信息</h2>
        <p className="text-sm text-gray-600">早班</p>
        <Button 
          onClick={handleUserClick}
          className="hover:shadow-md hover:scale-[1.03]"
          aria-label="查看用户详情"
        >
          查看详情
        </Button>
      </Card>
    </div>
  );
  ```
</example>

<example type="invalid">
  **错误的实现方式**：
  ```tsx
  const click = () => { // 函数名不描述性
    // 处理点击
  };
  
  return (
    <div style={{maxWidth: '390px'}}> {/* 使用内联样式而非Tailwind */}
      <div className="card"> {/* 不遵循设计系统规范 */}
        <h2>用户信息</h2> {/* 缺少样式类 */}
        <button onClick={click}> {/* 缺少无障碍属性 */}
          详情
        </button>
      </div>
    </div>
  );
  ```
</example>

















