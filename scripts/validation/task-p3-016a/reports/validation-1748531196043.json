{
  "timestamp": "2025-05-29T15:05:10.035Z",
  "taskId": "TASK-P3-016A",
  "layers": {
    "layer1": {
      "name": "Build System",
      "build": {
        "success": true,
        "duration": 36184,
        "output": "\n> web-app-next@0.1.0 build\n> next build\n\n   ▲ Next.js 15.3.2\n\n   Creating an optimized production build ...\n ✓ Compiled successfully in 3.0s\n   Linting and checking validity of types ...\n\n./src/lib/performance-optimizer.ts\n258:33  Warning: React Hook useMemo has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.  react-hooks/exhaustive-deps\n279:30  Warning: React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.  react-hooks/exhaustive-deps\n298:30  Warning: React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.  react-hooks/exhaustive-deps\n\n./src/lib/performance.ts\n202:22  Warning: React Hook React.useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.  react-hooks/exhaustive-deps\n\ninfo  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/app/api-reference/config/eslint#disabling-rules\n   Collecting page data ...\n   Generating static pages (0/13) ...\n   Generating static pages (3/13) \r\n   Generating static pages (6/13) \r\n   Generating static pages (9/13) \r\n ✓ Generating static pages (13/13)\n   Finalizing page optimization ...\n   Collecting build traces ...\n\nRoute (app)                                 Size  First Load JS\n┌ ○ /                                    2.65 kB         111 kB\n├ ○ /_not-found                            977 B         102 kB\n├ ƒ /api/auth/login                        155 B         101 kB\n├ ƒ /api/auth/logout                       155 B         101 kB\n├ ƒ /api/auth/status                       155 B         101 kB\n├ ƒ /api/auth/verify                       155 B         101 kB\n├ ƒ /api/products                          155 B         101 kB\n├ ƒ /api/trace/[id]                        155 B         101 kB\n├ ƒ /api/trace/[id]/verify                 155 B         101 kB\n├ ƒ /api/users/profile                     155 B         101 kB\n├ ○ /components                          12.7 kB         122 kB\n└ ○ /demo                                4.77 kB         114 kB\n+ First Load JS shared by all             101 kB\n  ├ chunks/4bd1b696-a3840510b767bfb7.js  53.2 kB\n  ├ chunks/684-9fabbd18d896bda3.js       45.8 kB\n  └ other shared chunks (total)          2.03 kB\n\n\n○  (Static)   prerendered as static content\nƒ  (Dynamic)  server-rendered on demand\n\n",
        "error": null
      },
      "passed": true,
      "issues": []
    },
    "layer2": {
      "name": "TypeScript Compilation",
      "typeCheck": {
        "success": true,
        "duration": 4700,
        "output": "",
        "error": null
      },
      "passed": true,
      "issues": []
    },
    "layer3": {
      "name": "Test System",
      "test": {
        "success": false,
        "duration": 0,
        "output": "\n> web-app-next@0.1.0 test\n> cross-env NODE_OPTIONS='--max-old-space-size=8192' jest --detectOpenHandles --forceExit --maxWorkers=1 --bail=5 --verbose\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/sync-manager.ts:28:23)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:547:36)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:28:23)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/sync-manager.ts:28:23)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [NetworkDetector] 网络状态变化: unknown → online\n\n      at NetworkDetectorImpl.log [as updateStatus] (src/lib/network-detector.ts:122:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at new SyncManagerImpl (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:120:27)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:646:35)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.error\n    [SyncManager] 执行操作失败: test_operation (test-op-123) Error: Execution error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:265:21)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at error (src/lib/sync-manager.ts:436:19)\n          at async Promise.all (index 0)\n      at SyncManagerImpl.executeSyncBatch (src/lib/sync-manager.ts:444:7)\n      at SyncManagerImpl.performSync (src/lib/sync-manager.ts:356:7)\n      at SyncManagerImpl.triggerSync (src/lib/sync-manager.ts:284:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:269:7)\n\n  console.error\n    [SyncManager] 同步过程发生错误: Error: First call error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:634:17)\n        at C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:397:39\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:404:13)\n        at Object.mockConstructor [as getPendingOperations] (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:148:19)\n        at SyncManagerImpl.getPendingOperations (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:376:41)\n        at SyncManagerImpl.getPendingOperations [as performSync] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:346:44)\n        at SyncManagerImpl.start (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:165:5)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:651:7)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at SyncManagerImpl.error [as performSync] (src/lib/sync-manager.ts:364:15)\n      at SyncManagerImpl.start (src/lib/sync-manager.ts:165:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:651:7)\n\n  console.error\n    [SyncManager] 同步过程发生错误: Error: Queue error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:671:56)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at SyncManagerImpl.error [as performSync] (src/lib/sync-manager.ts:364:15)\n      at SyncManagerImpl.triggerSync (src/lib/sync-manager.ts:284:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:673:7)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (tests/unit/lib/offline-queue.test.ts:10:23)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:547:36)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\offline-queue.test.ts:10:23)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (tests/unit/lib/offline-queue.test.ts:10:23)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/api-client.ts:32:23)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:547:36)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:32:23)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:54:20)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/api-client.ts:32:23)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [NetworkDetector] 网络状态变化: unknown → online\n\n      at NetworkDetectorImpl.log [as updateStatus] (src/lib/network-detector.ts:122:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (src/lib/api-client.ts:33:22)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at new SyncManagerImpl (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:120:27)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:646:35)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:33:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:54:20)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (src/lib/api-client.ts:33:22)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at Object.<anonymous> (src/lib/api-client.ts:689:34)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at createOfflineQueue (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:541:10)\n        at ExtendedApiClient.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:186:45)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:689:34)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:54:20)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at Object.<anonymous> (src/lib/api-client.ts:689:34)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.log\n    [SyncManager] 启动同步管理器\n\n      at SyncManagerImpl.log [as start] (src/lib/sync-manager.ts:160:13)\n\n  console.log\n    [SyncManager] 开始同步操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:340:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at Object.<anonymous> (src/lib/api-client.ts:689:34)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at OfflineQueueImpl.initialize [as ensureInitialized] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:114:18)\n        at OfflineQueueImpl.ensureInitialized [as size] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:266:16)\n        at SyncManagerImpl.size [as updateStats] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:540:45)\n        at SyncManagerImpl.updateStats (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:343:18)\n        at SyncManagerImpl.performSync [as start] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:165:16)\n        at ExtendedApiClient.start [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:208:32)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:689:34)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:54:20)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at Object.<anonymous> (src/lib/api-client.ts:689:34)\n      at Object.<anonymous> (src/services/http-service.ts:54:20)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.getApiClient (src/services/http-service.ts:609:47)\n      at Function.getApiClient [as createAuthService] (src/services/http-service.ts:620:51)\n      at Object.createAuthService (src/services/http-service.ts:683:47)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at createOfflineQueue (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:541:10)\n        at ExtendedApiClient.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:186:45)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at createExtendedApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:683:10)\n        at Function.getApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:609:47)\n        at Function.getApiClient [as createAuthService] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:620:51)\n        at Object.createAuthService (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:683:47)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.getApiClient (src/services/http-service.ts:609:47)\n      at Function.getApiClient [as createAuthService] (src/services/http-service.ts:620:51)\n      at Object.createAuthService (src/services/http-service.ts:683:47)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.log\n    [SyncManager] 启动同步管理器\n\n      at SyncManagerImpl.log [as start] (src/lib/sync-manager.ts:160:13)\n\n  console.log\n    [SyncManager] 开始同步操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:340:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.getApiClient (src/services/http-service.ts:609:47)\n      at Function.getApiClient [as createAuthService] (src/services/http-service.ts:620:51)\n      at Object.createAuthService (src/services/http-service.ts:683:47)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at OfflineQueueImpl.initialize [as ensureInitialized] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:114:18)\n        at OfflineQueueImpl.ensureInitialized [as size] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:266:16)\n        at SyncManagerImpl.size [as updateStats] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:540:45)\n        at SyncManagerImpl.updateStats (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:343:18)\n        at SyncManagerImpl.performSync [as start] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:165:16)\n        at ExtendedApiClient.start [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:208:32)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at createExtendedApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:683:10)\n        at Function.getApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:609:47)\n        at Function.getApiClient [as createAuthService] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:620:51)\n        at Object.createAuthService (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:683:47)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.getApiClient (src/services/http-service.ts:609:47)\n      at Function.getApiClient [as createAuthService] (src/services/http-service.ts:620:51)\n      at Object.createAuthService (src/services/http-service.ts:683:47)\n      at Object.<anonymous> (tests/unit/services/http-service.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [SyncManager] 没有待同步的操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:349:17)\n\n  console.log\n    [SyncManager] 没有待同步的操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:349:17)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.initialize (src/services/http-service.ts:601:45)\n      at Object.initialize (tests/unit/services/http-service.test.ts:633:26)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at createOfflineQueue (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:541:10)\n        at ExtendedApiClient.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:186:45)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at createExtendedApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:683:10)\n        at Function.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:601:45)\n        at Object.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:633:26)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at createOfflineQueue (src/lib/offline-queue.ts:541:10)\n      at ExtendedApiClient.initialize (src/lib/api-client.ts:186:45)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.initialize (src/services/http-service.ts:601:45)\n      at Object.initialize (tests/unit/services/http-service.test.ts:633:26)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.log\n    [SyncManager] 启动同步管理器\n\n      at SyncManagerImpl.log [as start] (src/lib/sync-manager.ts:160:13)\n\n  console.log\n    [SyncManager] 开始同步操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:340:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.initialize (src/services/http-service.ts:601:45)\n      at Object.initialize (tests/unit/services/http-service.test.ts:633:26)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at OfflineQueueImpl.initialize [as ensureInitialized] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:114:18)\n        at OfflineQueueImpl.ensureInitialized [as size] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:266:16)\n        at SyncManagerImpl.size [as updateStats] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:540:45)\n        at SyncManagerImpl.updateStats (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:343:18)\n        at SyncManagerImpl.performSync [as start] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:165:16)\n        at ExtendedApiClient.start [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:208:32)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:177:10)\n        at createExtendedApiClient (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\api-client.ts:683:10)\n        at Function.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\services\\http-service.ts:601:45)\n        at Object.initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\services\\http-service.test.ts:633:26)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at OfflineQueueImpl.initialize [as ensureInitialized] (src/lib/offline-queue.ts:114:18)\n      at OfflineQueueImpl.ensureInitialized [as size] (src/lib/offline-queue.ts:266:16)\n      at SyncManagerImpl.size [as updateStats] (src/lib/sync-manager.ts:540:45)\n      at SyncManagerImpl.updateStats (src/lib/sync-manager.ts:343:18)\n      at SyncManagerImpl.performSync [as start] (src/lib/sync-manager.ts:165:16)\n      at ExtendedApiClient.start [as initialize] (src/lib/api-client.ts:208:32)\n      at new initialize (src/lib/api-client.ts:177:10)\n      at createExtendedApiClient (src/lib/api-client.ts:683:10)\n      at Function.initialize (src/services/http-service.ts:601:45)\n      at Object.initialize (tests/unit/services/http-service.test.ts:633:26)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [OfflineQueue] 初始化完成，加载 0 个操作\n\n      at OfflineQueueImpl.log [as initialize] (src/lib/offline-queue.ts:102:15)\n\n  console.log\n    [SyncManager] 没有待同步的操作\n\n      at SyncManagerImpl.log [as performSync] (src/lib/sync-manager.ts:349:17)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [SyncManager] 停止同步管理器\n\n      at SyncManagerImpl.log [as stop] (src/lib/sync-manager.ts:178:13)\n\n  console.log\n    [OfflineQueue] 队列已销毁\n\n      at OfflineQueueImpl.log [as destroy] (src/lib/offline-queue.ts:533:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.warn\n    [ExtendedApiClient] 在线请求失败，添加到离线队列\n\n    \u001b[0m \u001b[90m 411 |\u001b[39m       \u001b[90m// 如果在线请求失败且启用了离线队列，尝试离线处理\u001b[39m\n     \u001b[90m 412 |\u001b[39m       \u001b[36mif\u001b[39m (shouldUseOnline \u001b[33m&&\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mconfig\u001b[33m.\u001b[39menableOfflineQueue \u001b[33m&&\u001b[39m \u001b[33m!\u001b[39mprocessedConfig\u001b[33m.\u001b[39mskipQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 413 |\u001b[39m         console\u001b[33m.\u001b[39mwarn(\u001b[32m'[ExtendedApiClient] 在线请求失败，添加到离线队列'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 414 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mexecuteOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(processedConfig)\u001b[33m;\u001b[39m\n     \u001b[90m 415 |\u001b[39m       }\n     \u001b[90m 416 |\u001b[39m       \u001b[0m\n\n      at ExtendedApiClient.warn [as request] (src/lib/api-client.ts:413:17)\n      at Object.<anonymous> (tests/unit/lib/api-client.test.ts:387:24)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 online 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 offline 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 切换到 auto 模式\n\n      at ExtendedApiClient.log [as setMode] (src/lib/api-client.ts:274:13)\n\n  console.log\n    [ExtendedApiClient] 客户端初始化完成\n\n      at ExtendedApiClient.log [as initialize] (src/lib/api-client.ts:218:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ExtendedApiClient] 客户端已销毁\n\n      at ExtendedApiClient.log [as destroy] (src/lib/api-client.ts:675:13)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/5\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/5\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: client\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: client\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: client\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: validation\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: auth\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: authz\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: auth\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: auth\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n          at Array.forEach (<anonymous>)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 2/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.log\n    [ErrorHandler] 已达到最大重试次数: 3/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:128:15)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: client\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at Object.getRetryDelay (tests/unit/lib/error-handler.test.ts:208:35)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at Object.getRetryDelay (tests/unit/lib/error-handler.test.ts:209:35)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at Object.getRetryDelay (tests/unit/lib/error-handler.test.ts:210:35)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError (src/lib/error-handler.ts:149:38)\n      at getRetryDelay (tests/unit/lib/error-handler.test.ts:264:22)\n          at Function.from (<anonymous>)\n      at Object.from (tests/unit/lib/error-handler.test.ts:263:28)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Test error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as handleError] (src/lib/error-handler.ts:97:38)\n      at Object.handleError (tests/unit/lib/error-handler.test.ts:288:26)\n\n  console.error\n    [ErrorHandler] 处理操作错误: test_operation (test-op-123) {\n      error: 'Test error',\n      classification: { type: 'unknown', retryable: true, maxRetries: 1 },\n      retryCount: 0,\n      maxRetries: 3\n    }\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m errorClassification \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclassifyError(error)\u001b[33m;\u001b[39m\n     \u001b[90m  98 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m     console\u001b[33m.\u001b[39merror(\u001b[32m`[ErrorHandler] 处理操作错误: ${operation.type} (${operation.id})`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m       error\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       classification\u001b[33m:\u001b[39m errorClassification\u001b[33m,\u001b[39m\n     \u001b[90m 102 |\u001b[39m       retryCount\u001b[33m:\u001b[39m operation\u001b[33m.\u001b[39mretryCount\u001b[33m,\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.error [as handleError] (src/lib/error-handler.ts:99:13)\n      at Object.handleError (tests/unit/lib/error-handler.test.ts:288:26)\n\n  console.log\n    [ErrorHandler] 错误指标: {\n      operationType: 'test_operation',\n      errorType: 'unknown',\n      retryCount: 0,\n      timestamp: 1748531170758,\n      message: 'Test error'\n    }\n\n      at ErrorHandlerImpl.log [as logErrorMetrics] (src/lib/error-handler.ts:321:13)\n\n  console.log\n    [ErrorHandler] 处理未分类错误，操作: test_operation (test-op-123)，错误: Test error，错误类型: unknown\n\n      at ErrorHandlerImpl.log [as executeSpecialHandling] (src/lib/error-handler.ts:299:17)\n\n  console.error\n    [ErrorHandler] 处理操作错误: test_operation (test-op-123) {\n      error: 'HTTP 401',\n      classification: { type: 'auth', retryable: false },\n      retryCount: 0,\n      maxRetries: 3\n    }\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m errorClassification \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclassifyError(error)\u001b[33m;\u001b[39m\n     \u001b[90m  98 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m     console\u001b[33m.\u001b[39merror(\u001b[32m`[ErrorHandler] 处理操作错误: ${operation.type} (${operation.id})`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m       error\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       classification\u001b[33m:\u001b[39m errorClassification\u001b[33m,\u001b[39m\n     \u001b[90m 102 |\u001b[39m       retryCount\u001b[33m:\u001b[39m operation\u001b[33m.\u001b[39mretryCount\u001b[33m,\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.error [as handleError] (src/lib/error-handler.ts:99:13)\n      at Object.handleError (tests/unit/lib/error-handler.test.ts:307:26)\n\n  console.log\n    [ErrorHandler] 错误指标: {\n      operationType: 'test_operation',\n      errorType: 'auth',\n      retryCount: 0,\n      timestamp: 1748531170773,\n      message: 'HTTP 401'\n    }\n\n      at ErrorHandlerImpl.log [as logErrorMetrics] (src/lib/error-handler.ts:321:13)\n\n  console.log\n    [ErrorHandler] 检测到认证错误，操作: test_operation (test-op-123)，错误: HTTP 401，可能需要重新登录\n\n      at ErrorHandlerImpl.log [as executeSpecialHandling] (src/lib/error-handler.ts:284:17)\n\n  console.error\n    [ErrorHandler] 处理操作错误: test_operation (test-op-123) {\n      error: 'HTTP 429',\n      classification: { type: 'rate_limit', retryable: true, maxRetries: 3 },\n      retryCount: 0,\n      maxRetries: 3\n    }\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m errorClassification \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclassifyError(error)\u001b[33m;\u001b[39m\n     \u001b[90m  98 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m     console\u001b[33m.\u001b[39merror(\u001b[32m`[ErrorHandler] 处理操作错误: ${operation.type} (${operation.id})`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m       error\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       classification\u001b[33m:\u001b[39m errorClassification\u001b[33m,\u001b[39m\n     \u001b[90m 102 |\u001b[39m       retryCount\u001b[33m:\u001b[39m operation\u001b[33m.\u001b[39mretryCount\u001b[33m,\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.error [as handleError] (src/lib/error-handler.ts:99:13)\n      at Object.handleError (tests/unit/lib/error-handler.test.ts:318:26)\n\n  console.log\n    [ErrorHandler] 错误指标: {\n      operationType: 'test_operation',\n      errorType: 'rate_limit',\n      retryCount: 0,\n      timestamp: 1748531170781,\n      message: 'HTTP 429'\n    }\n\n      at ErrorHandlerImpl.log [as logErrorMetrics] (src/lib/error-handler.ts:321:13)\n\n  console.log\n    [ErrorHandler] 检测到限流错误，操作: test_operation (test-op-123)，错误: HTTP 429，调整请求策略\n\n      at ErrorHandlerImpl.log [as executeSpecialHandling] (src/lib/error-handler.ts:290:17)\n\n  console.error\n    [ErrorHandler] 处理操作错误: test_operation (test-op-123) {\n      error: 'HTTP 422',\n      classification: { type: 'validation', retryable: false },\n      retryCount: 0,\n      maxRetries: 3\n    }\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m errorClassification \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclassifyError(error)\u001b[33m;\u001b[39m\n     \u001b[90m  98 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m     console\u001b[33m.\u001b[39merror(\u001b[32m`[ErrorHandler] 处理操作错误: ${operation.type} (${operation.id})`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m       error\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       classification\u001b[33m:\u001b[39m errorClassification\u001b[33m,\u001b[39m\n     \u001b[90m 102 |\u001b[39m       retryCount\u001b[33m:\u001b[39m operation\u001b[33m.\u001b[39mretryCount\u001b[33m,\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.error [as handleError] (src/lib/error-handler.ts:99:13)\n      at Object.handleError (tests/unit/lib/error-handler.test.ts:329:26)\n\n  console.log\n    [ErrorHandler] 错误指标: {\n      operationType: 'test_operation',\n      errorType: 'validation',\n      retryCount: 0,\n      timestamp: 1748531170787,\n      message: 'HTTP 422'\n    }\n\n      at ErrorHandlerImpl.log [as logErrorMetrics] (src/lib/error-handler.ts:321:13)\n\n  console.log\n    [ErrorHandler] 检测到验证错误，操作: test_operation (test-op-123)，错误: HTTP 422，检查数据格式: { name: 'test' }\n\n      at ErrorHandlerImpl.log [as executeSpecialHandling] (src/lib/error-handler.ts:295:17)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Some unknown error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as shouldRetry] (src/lib/error-handler.ts:117:38)\n      at Object.shouldRetry (tests/unit/lib/error-handler.test.ts:346:40)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/1\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Some unknown error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as shouldRetry] (src/lib/error-handler.ts:117:38)\n      at Object.shouldRetry (tests/unit/lib/error-handler.test.ts:354:41)\n\n  console.log\n    [ErrorHandler] 已达到最大重试次数: 1/1\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:128:15)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Completely unknown error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as shouldRetry] (src/lib/error-handler.ts:117:38)\n      at Object.shouldRetry (tests/unit/lib/error-handler.test.ts:362:20)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/1\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.log\n    [ErrorHandler] 错误类型不可重试: network\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:121:15)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 5/5\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Test error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as shouldRetry] (src/lib/error-handler.ts:117:38)\n      at Object.shouldRetry (tests/unit/lib/error-handler.test.ts:436:47)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/1\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理:\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as shouldRetry] (src/lib/error-handler.ts:117:38)\n      at Object.shouldRetry (tests/unit/lib/error-handler.test.ts:446:40)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 1/1\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.warn\n    [ErrorHandler] 无法分类错误，使用默认处理: Test error\n\n    \u001b[0m \u001b[90m 211 |\u001b[39m\n     \u001b[90m 212 |\u001b[39m     \u001b[90m// 默认分类\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     console\u001b[33m.\u001b[39mwarn(\u001b[32m`[ErrorHandler] 无法分类错误，使用默认处理: ${errorMessage}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 214 |\u001b[39m     \u001b[36mreturn\u001b[39m { type\u001b[33m:\u001b[39m \u001b[33mErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUNKNOWN\u001b[39m\u001b[33m,\u001b[39m retryable\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m maxRetries\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 215 |\u001b[39m   }\n     \u001b[90m 216 |\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.warn [as classifyError] (src/lib/error-handler.ts:213:13)\n      at ErrorHandlerImpl.classifyError [as handleError] (src/lib/error-handler.ts:97:38)\n      at handleError (tests/unit/lib/error-handler.test.ts:455:28)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (tests/unit/lib/error-handler.test.ts:456:14)\n\n  console.error\n    [ErrorHandler] 处理操作错误: test_operation (test-op-123) {\n      error: 'Test error',\n      classification: { type: 'unknown', retryable: true, maxRetries: 1 },\n      retryCount: 0,\n      maxRetries: 3\n    }\n\n    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m errorClassification \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclassifyError(error)\u001b[33m;\u001b[39m\n     \u001b[90m  98 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  99 |\u001b[39m     console\u001b[33m.\u001b[39merror(\u001b[32m`[ErrorHandler] 处理操作错误: ${operation.type} (${operation.id})`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 100 |\u001b[39m       error\u001b[33m:\u001b[39m error\u001b[33m.\u001b[39mmessage\u001b[33m,\u001b[39m\n     \u001b[90m 101 |\u001b[39m       classification\u001b[33m:\u001b[39m errorClassification\u001b[33m,\u001b[39m\n     \u001b[90m 102 |\u001b[39m       retryCount\u001b[33m:\u001b[39m operation\u001b[33m.\u001b[39mretryCount\u001b[33m,\u001b[39m\u001b[0m\n\n      at ErrorHandlerImpl.error [as handleError] (src/lib/error-handler.ts:99:13)\n      at handleError (tests/unit/lib/error-handler.test.ts:455:28)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (tests/unit/lib/error-handler.test.ts:456:14)\n\n  console.log\n    [ErrorHandler] 错误指标: {\n      operationType: 'test_operation',\n      errorType: 'unknown',\n      retryCount: 0,\n      timestamp: 1748531170831,\n      message: 'Test error'\n    }\n\n      at ErrorHandlerImpl.log [as logErrorMetrics] (src/lib/error-handler.ts:321:13)\n\n  console.log\n    [ErrorHandler] 处理未分类错误，操作: test_operation (test-op-123)，错误: Test error，错误类型: unknown\n\n      at ErrorHandlerImpl.log [as executeSpecialHandling] (src/lib/error-handler.ts:299:17)\n\n  console.log\n    [ErrorHandler] 已达到最大重试次数: 100/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:128:15)\n\n  console.log\n    [ErrorHandler] 操作可以重试: test_operation (test-op-123), 重试次数: 0/3\n\n      at ErrorHandlerImpl.log [as shouldRetry] (src/lib/error-handler.ts:141:13)\n\n  console.log\n    Cache cleared\n\n      at log (src/hooks/useApi-v2.ts:292:11)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n  console.error\n    Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at console.call [as error] (tests/setup.ts:107:19)\n      at getRootForUpdatedFiber (node_modules/react-dom/cjs/react-dom-client.development.js:3867:17)\n      at enqueueConcurrentHookUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:3820:14)\n      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6966:18)\n      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)\n      at setLoading (src/hooks/useApi-v2.ts:110:5)\n      at cancel (src/hooks/useApi-v2.ts:128:7)\n      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23961:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at commitHookEffectListUnmount (node_modules/react-dom/cjs/react-dom-client.development.js:11996:17)\n      at commitHookPassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:12043:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14186:13)\n      at recursivelyTraversePassiveUnmountEffects (node_modules/react-dom/cjs/react-dom-client.development.js:14176:11)\n      at commitPassiveUnmountOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14194:11)\n      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom-client.development.js:15736:9)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:15379:15\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderHook (node_modules/@testing-library/react/dist/pure.js:340:7)\n      at Object.<anonymous> (tests/unit/hooks/useApi.test.tsx:75:34)\n\n",
        "error": "FAIL tests/unit/lib/sync-manager.test.ts (11.086 s)\n  SyncManager\n    同步状态管理\n      √ 应该初始化为IDLE状态 (4 ms)\n      √ 应该能够启动同步 (8 ms)\n      √ 应该能够停止同步 (2 ms)\n      √ 应该能够暂停和恢复同步 (2 ms)\n      √ 应该监听状态变化 (3 ms)\n      √ 应该监听进度变化 (1 ms)\n    同步执行\n      √ 应该执行待处理的操作 (2 ms)\n      √ 应该处理执行成功的操作 (2 ms)\n      √ 应该处理执行失败的操作 (2 ms)\n      √ 应该处理不可重试的失败操作 (2 ms)\n      √ 应该处理执行过程中的异常 (7 ms)\n    批量处理\n      √ 应该按配置的批量大小处理操作 (2 ms)\n      ○ skipped 应该控制并发执行数量 - SKIPPED due to timing sensitivity\n    网络状态处理\n      √ 应该在网络离线时暂停同步 (1 ms)\n      √ 应该在网络恢复时恢复同步 (1 ms)\n      √ 应该在离线模式下继续同步 (6 ms)\n      √ 应该在仅在线模式下跳过离线同步 (1 ms)\n    智能调度\n      √ 应该跳过有重试延迟的操作 (1 ms)\n      √ 应该延迟处理低优先级操作 (1 ms)\n      √ 应该在禁用智能调度时处理所有操作 (2 ms)\n    失败操作重试\n      √ 应该定期重试失败的操作 (2 ms)\n      √ 应该跳过不可重试的失败操作 (2 ms)\n    配置管理\n      √ 应该使用自定义配置 (2 ms)\n      √ 应该能够更新配置 (2 ms)\n      √ 更新同步间隔应该重启定时器 (2 ms)\n    统计信息\n      √ 应该提供同步统计信息 (4 ms)\n      √ 应该更新同步统计 (1 ms)\n    定时同步\n      √ 应该根据配置间隔执行同步 (5 ms)\n      √ 应该在暂停时跳过定时同步 (1 ms)\n      × 应该继续定时同步即使发生错误 (10007 ms)\n    错误处理\n      √ 应该处理同步过程中的错误 (5 ms)\n    工具函数\n      √ createSyncManager应该创建同步管理器实例 (2 ms)\n    资源清理\n      √ 应该正确清理资源 (1 ms)\n\n  ● SyncManager › 定时同步 › 应该继续定时同步即使发生错误\n\n    thrown: \"Exceeded timeout of 10000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\n    \u001b[0m \u001b[90m 627 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 628 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 629 |\u001b[39m     test(\u001b[32m'应该继续定时同步即使发生错误'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 630 |\u001b[39m       \u001b[36mlet\u001b[39m callCount \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 631 |\u001b[39m       mockQueue\u001b[33m.\u001b[39mgetPendingOperations\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 632 |\u001b[39m         callCount\u001b[33m++\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      at test (tests/unit/lib/sync-manager.test.ts:629:5)\n      at describe (tests/unit/lib/sync-manager.test.ts:605:3)\n      at Object.describe (tests/unit/lib/sync-manager.test.ts:73:1)\n\nFAIL tests/unit/lib/offline-queue.test.ts\n  OfflineQueue\n    基础队列操作\n      √ 应该能够入队操作 (22 ms)\n      √ 应该能够出队操作 (14 ms)\n      √ 应该正确处理空队列出队 (17 ms)\n      √ 应该能够查看队列头部但不移除 (20 ms)\n      √ 应该能够清空队列 (16 ms)\n    优先级队列\n      √ 应该按优先级顺序出队 (16 ms)\n      √ 相同优先级应该按时间戳排序（FIFO） (31 ms)\n    操作管理\n      √ 应该能够根据ID获取操作 (17 ms)\n      √ 应该能够更新操作 (15 ms)\n      √ 应该能够移除操作 (14 ms)\n      √ 应该能够筛选操作 (16 ms)\n    重试机制\n      √ 应该能够重试失败的操作 (15 ms)\n      √ 应该拒绝重试超过最大次数的操作 (15 ms)\n      √ 应该能够批量重试失败的操作 (16 ms)\n    统计信息\n      √ 应该提供正确的队列统计信息 (15 ms)\n      √ 应该正确获取待执行操作数量 (15 ms)\n    数据验证\n      √ 应该拒绝无效的操作数据 (16 ms)\n      √ 应该拒绝超过最大队列大小 (15 ms)\n    清理功能\n      √ 应该能够清理过期的操作 (16 ms)\n    工具函数\n      √ createOperation应该创建正确的操作对象 (15 ms)\n      √ createOfflineQueue应该创建队列实例 (15 ms)\n    持久化存储\n      × 应该能够持久化和恢复队列状态 (125 ms)\n\n  ● OfflineQueue › 持久化存储 › 应该能够持久化和恢复队列状态\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n    \u001b[0m \u001b[90m 521 |\u001b[39m\n     \u001b[90m 522 |\u001b[39m       queueSize \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m newQueue\u001b[33m.\u001b[39msize()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m       expect(queueSize)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 524 |\u001b[39m\n     \u001b[90m 525 |\u001b[39m       \u001b[36mconst\u001b[39m operations \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m newQueue\u001b[33m.\u001b[39mgetAll()\u001b[33m;\u001b[39m\n     \u001b[90m 526 |\u001b[39m       expect(operations[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'persistent'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/lib/offline-queue.test.ts:523:25)\n\nPASS tests/unit/components/button.test.tsx\n  Button Component\n    √ renders button with text (70 ms)\n    √ handles click events (11 ms)\n    √ shows loading state (17 ms)\n    √ applies variant styles (7 ms)\n    √ applies size styles (6 ms)\n    √ is disabled when disabled prop is true (5 ms)\n\nPASS tests/unit/lib/operation-executor.test.ts\n  OperationExecutor\n    HTTP请求执行\n      √ 应该成功执行GET请求 (3 ms)\n      √ 应该成功执行POST请求 (1 ms)\n      √ 应该处理HTTP错误响应 (4 ms)\n      √ 应该处理网络错误 (1 ms)\n      √ 应该处理超时错误 (2 ms)\n    批量操作执行\n      √ 应该成功执行批量操作 (2 ms)\n      √ 应该处理批量操作中的部分失败 (2 ms)\n      √ 应该控制并发执行数量 (253 ms)\n    操作取消\n      √ 应该能够取消操作 (2 ms)\n      √ 应该返回取消状态的执行结果 (1 ms)\n      √ 应该自动清理取消标记 (5 ms)\n    配置管理\n      √ 应该能够更新配置 (1 ms)\n      √ 应该返回当前配置 (1 ms)\n    HTTP方法支持\n      √ 应该支持GET方法 (1 ms)\n      √ 应该支持POST方法 (1 ms)\n      √ 应该支持PUT方法 (1 ms)\n      √ 应该支持DELETE方法 (2 ms)\n      √ 应该支持PATCH方法 (2 ms)\n      √ 应该拒绝不支持的HTTP方法 (1 ms)\n    工具函数\n      √ createOperationExecutor应该创建执行器实例 (3 ms)\n      √ validateOperation应该验证操作有效性 (2 ms)\n      √ validateOperation应该检测无效操作 (1 ms)\n      √ estimateExecutionTime应该估算执行时间 (2 ms)\n      √ 估算时间应该根据方法类型调整 (1 ms)\n    错误处理\n      √ 应该处理JSON解析错误 (1 ms)\n      √ 应该处理非JSON响应 (2 ms)\n\nPASS tests/unit/services/http-service.test.ts\n  BaseApiService\n    构造函数\n      √ 应该正确初始化服务 (1 ms)\n    handleRequest\n      √ 应该成功处理请求并返回数据 (1 ms)\n      √ 应该处理API错误 (5 ms)\n    buildQueryString\n      √ 应该构建正确的查询字符串 (2 ms)\n      √ 应该处理数组参数 (1 ms)\n      √ 应该过滤空值 (1 ms)\n      √ 应该返回空字符串如果没有有效参数 (1 ms)\n    错误处理\n      √ 应该处理其他HTTP错误码 (1 ms)\n  AuthService\n    login\n      √ 应该成功登录 (3 ms)\n    logout\n      √ 应该成功登出 (1 ms)\n    getCurrentUser\n      √ 应该获取当前用户信息 (2 ms)\n    refreshToken\n      √ 应该刷新访问令牌 (1 ms)\n    getPermissions\n      √ 应该获取用户权限 (1 ms)\n    verifyToken\n      √ 应该验证令牌 (1 ms)\n  TraceService\n    getTraces\n      √ 应该获取溯源批次列表 (2 ms)\n      √ 应该获取溯源批次列表不带参数 (1 ms)\n    getTrace\n      √ 应该获取特定溯源批次详情 (2 ms)\n    createTrace\n      √ 应该创建新的溯源批次 (2 ms)\n    updateTrace\n      √ 应该更新溯源批次 (2 ms)\n    deleteTrace\n      √ 应该删除溯源批次 (1 ms)\n    verifyTrace\n      √ 应该验证溯源批次 (1 ms)\n    searchTraces\n      √ 应该搜索溯源批次 (2 ms)\n  ProductService\n    getProducts\n      √ 应该获取产品列表 (2 ms)\n    getProduct\n      √ 应该获取产品详情 (1 ms)\n    getCategories\n      √ 应该获取产品分类 (1 ms)\n    createProduct\n      √ 应该创建产品 (1 ms)\n  UserService\n    getProfile\n      √ 应该获取用户资料 (2 ms)\n    updateProfile\n      √ 应该更新用户资料 (1 ms)\n    uploadAvatar\n      √ 应该上传头像 (5 ms)\n    changePassword\n      √ 应该修改密码 (2 ms)\n  DashboardService\n    getStats\n      √ 应该获取统计数据 (2 ms)\n      √ 应该获取统计数据不带时间范围 (1 ms)\n    getOverview\n      √ 应该获取概览数据 (1 ms)\n    generateReport\n      √ 应该生成报告 (1 ms)\n    refreshData\n      √ 应该刷新数据 (1 ms)\n  HttpServiceFactory\n    初始化\n      √ 应该初始化服务工厂 (31 ms)\n      √ 应该在未初始化时创建默认客户端 (5 ms)\n    服务创建\n      √ 应该创建认证服务单例 (5 ms)\n      √ 应该创建溯源服务单例 (5 ms)\n      √ 应该创建产品服务单例 (4 ms)\n      √ 应该创建用户服务单例 (4 ms)\n      √ 应该创建仪表板服务单例 (4 ms)\n    清理\n      √ 应该清理所有服务实例 (6 ms)\n\nFAIL tests/unit/lib/api-client.test.ts\n  ExtendedApiClient\n    构造函数和初始化\n      √ 应该正确初始化配置 (6 ms)\n      √ 应该使用默认配置值 (3 ms)\n      √ 应该设置网络状态监听器 (3 ms)\n    操作模式管理\n      √ 应该能够设置和获取操作模式 (3 ms)\n      √ 应该根据网络状态自动切换模式 (3 ms)\n    请求拦截器\n      √ 应该能够添加和移除请求拦截器 (6 ms)\n      √ 应该能够添加和移除响应拦截器 (2 ms)\n      × 应该在请求时执行拦截器 (3 ms)\n    在线请求\n      √ 应该执行GET请求 (5 ms)\n      √ 应该执行POST请求 (4 ms)\n      √ 应该执行PUT请求 (4 ms)\n      √ 应该执行DELETE请求 (3 ms)\n      √ 应该执行PATCH请求 (2 ms)\n      √ 应该处理自定义选项 (4 ms)\n    离线请求\n      × 应该将请求添加到离线队列 (3 ms)\n      × 应该包含操作ID在响应中 (3 ms)\n      × 应该使用正确的优先级 (3 ms)\n    强制模式\n      √ 应该强制使用在线模式 (3 ms)\n      × 应该强制使用离线模式 (2 ms)\n    文件上传\n      × 应该支持文件上传 (2 ms)\n      × 应该支持自定义字段名 (3 ms)\n    错误处理和fallback\n      × 应该在在线请求失败时fallback到离线队列 (7 ms)\n      √ 应该跳过队列如果skipQueue为true (5 ms)\n    认证token管理\n      √ 应该设置认证token (3 ms)\n      √ 应该清除认证token (3 ms)\n    同步管理\n      × 应该触发手动同步 (3 ms)\n      √ 应该获取队列状态 (2 ms)\n    统计信息\n      × 应该跟踪请求统计 (3 ms)\n      √ 应该跟踪失败请求 (2 ms)\n    Mock API支持\n      √ 应该在Mock环境下添加延迟 (114 ms)\n    资源清理\n      × 应该正确销毁客户端 (4 ms)\n      √ 应该清理拦截器 (3 ms)\n    边界情况\n      × 应该处理无效的HTTP方法 (3 ms)\n      √ 应该处理禁用离线队列的情况 (7 ms)\n      √ 应该处理同步管理器未初始化的情况 (5 ms)\n\n  ● ExtendedApiClient › 请求拦截器 › 应该在请求时执行拦截器\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n      at Object.<anonymous> (tests/unit/lib/api-client.test.ts:179:7)\n\n  ● ExtendedApiClient › 离线请求 › 应该将请求添加到离线队列\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 离线请求 › 应该包含操作ID在响应中\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 离线请求 › 应该使用正确的优先级\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 强制模式 › 应该强制使用离线模式\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 文件上传 › 应该支持文件上传\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 文件上传 › 应该支持自定义字段名\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 错误处理和fallback › 应该在在线请求失败时fallback到离线队列\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:414:27)\n      at Object.<anonymous> (tests/unit/lib/api-client.test.ts:387:24)\n\n  ● ExtendedApiClient › 同步管理 › 应该触发手动同步\n\n    TypeError: Cannot read properties of undefined (reading 'triggerSync')\n\n    \u001b[0m \u001b[90m 422 |\u001b[39m       \u001b[36mconst\u001b[39m { createSyncManager } \u001b[33m=\u001b[39m require(\u001b[32m'@/lib/sync-manager'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 423 |\u001b[39m       \u001b[36mconst\u001b[39m mockSyncManager \u001b[33m=\u001b[39m createSyncManager()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 424 |\u001b[39m       expect(mockSyncManager\u001b[33m.\u001b[39mtriggerSync)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 425 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 426 |\u001b[39m\n     \u001b[90m 427 |\u001b[39m     it(\u001b[32m'应该获取队列状态'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.triggerSync (tests/unit/lib/api-client.test.ts:424:30)\n\n  ● ExtendedApiClient › 统计信息 › 应该跟踪请求统计\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n\n  ● ExtendedApiClient › 资源清理 › 应该正确销毁客户端\n\n    TypeError: Cannot read properties of undefined (reading 'stop')\n\n    \u001b[0m \u001b[90m 496 |\u001b[39m       \u001b[36mawait\u001b[39m apiClient\u001b[33m.\u001b[39mdestroy()\u001b[33m;\u001b[39m\n     \u001b[90m 497 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 498 |\u001b[39m       expect(mockSyncManager\u001b[33m.\u001b[39mstop)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 499 |\u001b[39m       expect(mockQueue\u001b[33m.\u001b[39mdestroy)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m 500 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 501 |\u001b[39m\u001b[0m\n\n      at Object.stop (tests/unit/lib/api-client.test.ts:498:30)\n\n  ● ExtendedApiClient › 边界情况 › 应该处理无效的HTTP方法\n\n    离线队列未启用\n\n    \u001b[0m \u001b[90m 472 |\u001b[39m   \u001b[36mprivate\u001b[39m \u001b[36masync\u001b[39m executeOfflineRequest\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(config\u001b[33m:\u001b[39m \u001b[33mRequestConfig\u001b[39m)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[33mApiResponse\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>>\u001b[39m {\n     \u001b[90m 473 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mofflineQueue) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 474 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'离线队列未启用'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 475 |\u001b[39m     }\n     \u001b[90m 476 |\u001b[39m     \n     \u001b[90m 477 |\u001b[39m     \u001b[36mconst\u001b[39m operation \u001b[33m=\u001b[39m createOperation(\u001b[0m\n\n      at ExtendedApiClient.executeOfflineRequest (src/lib/api-client.ts:474:13)\n      at ExtendedApiClient.executeOfflineRequest [as request] (src/lib/api-client.ts:397:31)\n      at Object.<anonymous> (tests/unit/lib/api-client.test.ts:521:24)\n\nFAIL tests/unit/lib/error-handler.test.ts\n  ErrorHandler\n    错误分类\n      √ 应该正确分类网络错误 (8 ms)\n      √ 应该正确分类超时错误 (7 ms)\n      √ 应该正确分类服务器错误 (5 ms)\n      √ 应该正确分类客户端错误（不可重试） (3 ms)\n      √ 应该正确分类认证错误（不可重试） (3 ms)\n      √ 应该处理限流错误 (1 ms)\n    重试判断\n      √ 应该在未达到最大重试次数时允许重试 (2 ms)\n      √ 应该在达到最大重试次数时拒绝重试 (1 ms)\n      √ 应该根据错误类型决定重试 (1 ms)\n      √ 应该处理限流错误的特殊重试逻辑\n    延迟计算\n      √ 应该为网络错误计算指数退避延迟 (14 ms)\n      √ 应该为限流错误计算特殊延迟 (1 ms)\n      √ 应该根据错误类型使用不同的基础延迟 (1 ms)\n      √ 应该在延迟中添加随机抖动 (25 ms)\n      √ 应该有最大延迟限制 (1 ms)\n    错误处理\n      × 应该记录错误信息 (7 ms)\n      × 应该处理认证错误的特殊逻辑 (7 ms)\n      × 应该处理限流错误的特殊逻辑 (7 ms)\n      × 应该处理验证错误的特殊逻辑 (6 ms)\n    未知错误处理\n      √ 应该将未知错误标记为可重试但限制重试次数 (7 ms)\n      × 应该为未知错误输出警告 (5 ms)\n    自定义配置\n      √ 应该使用自定义错误分类 (2 ms)\n      √ 应该使用自定义默认重试次数 (1 ms)\n      √ 应该使用自定义重试延迟 (1 ms)\n    工具函数\n      √ createErrorHandler应该创建自定义错误处理器 (1 ms)\n      √ defaultErrorHandler应该是可用的实例 (6 ms)\n    边界情况\n      √ 应该处理空错误消息 (5 ms)\n      √ 应该处理null/undefined操作数据 (8 ms)\n      √ 应该处理非常高的重试次数 (2 ms)\n      √ 应该处理负数重试次数 (2 ms)\n\n  ● ErrorHandler › 错误处理 › 应该记录错误信息\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"[ErrorHandler] 错误指标:\", ObjectContaining {\"errorType\": \"unknown\", \"message\": \"Test error\", \"operationType\": \"test_operation\", \"retryCount\": 0, \"timestamp\": Any<Number>}\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 289 |\u001b[39m       \n     \u001b[90m 290 |\u001b[39m       \u001b[90m// 验证错误指标日志被正确记录\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 291 |\u001b[39m       expect(consoleSpy\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 292 |\u001b[39m         \u001b[32m'[ErrorHandler] 错误指标:'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 293 |\u001b[39m         expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 294 |\u001b[39m           operationType\u001b[33m:\u001b[39m \u001b[32m'test_operation'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/lib/error-handler.test.ts:291:30)\n\n  ● ErrorHandler › 错误处理 › 应该处理认证错误的特殊逻辑\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"检测到认证错误\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 307 |\u001b[39m       \u001b[36mawait\u001b[39m errorHandler\u001b[33m.\u001b[39mhandleError(operation\u001b[33m,\u001b[39m authError)\u001b[33m;\u001b[39m\n     \u001b[90m 308 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 309 |\u001b[39m       expect(consoleSpy\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 310 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'检测到认证错误'\u001b[39m)\n     \u001b[90m 311 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 312 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/lib/error-handler.test.ts:309:30)\n\n  ● ErrorHandler › 错误处理 › 应该处理限流错误的特殊逻辑\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"检测到限流错误\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 318 |\u001b[39m       \u001b[36mawait\u001b[39m errorHandler\u001b[33m.\u001b[39mhandleError(operation\u001b[33m,\u001b[39m rateLimitError)\u001b[33m;\u001b[39m\n     \u001b[90m 319 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 320 |\u001b[39m       expect(consoleSpy\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 321 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'检测到限流错误'\u001b[39m)\n     \u001b[90m 322 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 323 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/lib/error-handler.test.ts:320:30)\n\n  ● ErrorHandler › 错误处理 › 应该处理验证错误的特殊逻辑\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"检测到验证错误\", {\"name\": \"test\"}\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 329 |\u001b[39m       \u001b[36mawait\u001b[39m errorHandler\u001b[33m.\u001b[39mhandleError(operation\u001b[33m,\u001b[39m validationError)\u001b[33m;\u001b[39m\n     \u001b[90m 330 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 331 |\u001b[39m       expect(consoleSpy\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 332 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'检测到验证错误'\u001b[39m)\u001b[33m,\u001b[39m\n     \u001b[90m 333 |\u001b[39m         operation\u001b[33m.\u001b[39mdata\n     \u001b[90m 334 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/lib/error-handler.test.ts:331:30)\n\n  ● ErrorHandler › 未知错误处理 › 应该为未知错误输出警告\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"无法分类错误，使用默认处理: Completely unknown error\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 362 |\u001b[39m       errorHandler\u001b[33m.\u001b[39mshouldRetry(operation\u001b[33m,\u001b[39m unknownError)\u001b[33m;\u001b[39m\n     \u001b[90m 363 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 364 |\u001b[39m       expect(consoleSpy\u001b[33m.\u001b[39mwarn)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 365 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'无法分类错误，使用默认处理: Completely unknown error'\u001b[39m)\n     \u001b[90m 366 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 367 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/lib/error-handler.test.ts:364:31)\n\n"
      },
      "stats": {
        "totalSuites": 0,
        "passedSuites": 0,
        "failedSuites": 0,
        "totalTests": 0,
        "passedTests": 0,
        "failedTests": 0,
        "passRate": 0,
        "memoryIssues": false,
        "crashed": false
      },
      "passed": false,
      "issues": [
        "测试环境不稳定",
        "通过率0.0%低于基准70%"
      ]
    },
    "layer4": {
      "name": "Development Server",
      "devServer": {
        "success": true,
        "duration": 0,
        "output": "开发服务器已在运行，跳过启动验证",
        "error": null
      },
      "passed": true,
      "issues": []
    },
    "layer5": {
      "name": "Core Functionality",
      "syncManager": {
        "success": false,
        "duration": 0,
        "output": "\n> web-app-next@0.1.0 test\n> cross-env NODE_OPTIONS='--max-old-space-size=8192' jest --detectOpenHandles --forceExit tests/unit/lib/sync-manager.test.ts --verbose\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/sync-manager.ts:28:23)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:547:36)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:28:23)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at Object.<anonymous> (src/lib/offline-queue.ts:547:36)\n      at Object.<anonymous> (src/lib/sync-manager.ts:28:23)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [NetworkDetector] 网络状态变化: unknown → online\n\n      at NetworkDetectorImpl.log [as updateStatus] (src/lib/network-detector.ts:122:15)\n\n  console.warn\n    [Storage] 解压失败: DOMException {}\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mreturn\u001b[39m decodeURIComponent(atob(compressedData))\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m     } \u001b[36mcatch\u001b[39m (error) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 解压失败:'\u001b[39m\u001b[33m,\u001b[39m error)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m       \u001b[36mreturn\u001b[39m compressedData\u001b[33m;\u001b[39m\n     \u001b[90m 57 |\u001b[39m     }\n     \u001b[90m 58 |\u001b[39m   }\u001b[0m\n\n      at Function.warn [as decompress] (src/lib/storage.ts:55:15)\n      at StorageImpl.decompress [as deserialize] (src/lib/storage.ts:159:41)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.warn\n    [Storage] 数据反序列化失败: SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n        at StorageImpl.parse [as deserialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:162:27)\n        at StorageImpl.deserialize [as getItem] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\storage.ts:239:27)\n        at OfflineQueueImpl.getItem [as loadFromStorage] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:130:51)\n        at OfflineQueueImpl.loadFromStorage [as initialize] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:100:18)\n        at new initialize (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\offline-queue.ts:90:10)\n        at new SyncManagerImpl (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:120:27)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:646:35)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at Runtime.requireModuleOrMock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1048:21)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:10:22)\n        at Runtime._execModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n        at Runtime._loadModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n        at Runtime.requireModule (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runtime\\build\\index.js:882:12)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n        at processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 170 |\u001b[39m       \u001b[36mreturn\u001b[39m parsed\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m     } \u001b[36mcatch\u001b[39m (deserializationError) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 172 |\u001b[39m       console\u001b[33m.\u001b[39mwarn(\u001b[32m'[Storage] 数据反序列化失败:'\u001b[39m\u001b[33m,\u001b[39m deserializationError)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 173 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 174 |\u001b[39m     }\n     \u001b[90m 175 |\u001b[39m   }\u001b[0m\n\n      at StorageImpl.warn [as deserialize] (src/lib/storage.ts:172:15)\n      at StorageImpl.deserialize [as getItem] (src/lib/storage.ts:239:27)\n      at OfflineQueueImpl.getItem [as loadFromStorage] (src/lib/offline-queue.ts:130:51)\n      at OfflineQueueImpl.loadFromStorage [as initialize] (src/lib/offline-queue.ts:100:18)\n      at new initialize (src/lib/offline-queue.ts:90:10)\n      at new SyncManagerImpl (src/lib/sync-manager.ts:120:27)\n      at Object.<anonymous> (src/lib/sync-manager.ts:646:35)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:10:22)\n\n  console.log\n    [Storage] 已读取数据: operations 失败\n\n      at StorageImpl.log [as getItem] (src/lib/storage.ts:240:15)\n\n  console.log\n    [SyncManager] 同步管理器初始化完成\n\n      at SyncManagerImpl.log [as initialize] (src/lib/sync-manager.ts:148:13)\n\n  console.error\n    [SyncManager] 执行操作失败: test_operation (test-op-123) Error: Execution error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:265:21)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at error (src/lib/sync-manager.ts:436:19)\n          at async Promise.all (index 0)\n      at SyncManagerImpl.executeSyncBatch (src/lib/sync-manager.ts:444:7)\n      at SyncManagerImpl.performSync (src/lib/sync-manager.ts:356:7)\n      at SyncManagerImpl.triggerSync (src/lib/sync-manager.ts:284:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:269:7)\n\n  console.error\n    [SyncManager] 同步过程发生错误: Error: First call error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:634:17)\n        at C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:397:39\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:404:13)\n        at Object.mockConstructor [as getPendingOperations] (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-mock\\build\\index.js:148:19)\n        at SyncManagerImpl.getPendingOperations (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:376:41)\n        at SyncManagerImpl.getPendingOperations [as performSync] (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:346:44)\n        at processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at SyncManagerImpl.start (C:\\Users\\Steve\\heiniu\\web-app-next\\src\\lib\\sync-manager.ts:165:5)\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:651:7)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at SyncManagerImpl.error [as performSync] (src/lib/sync-manager.ts:364:15)\n      at SyncManagerImpl.start (src/lib/sync-manager.ts:165:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:651:7)\n\n  console.error\n    [SyncManager] 同步过程发生错误: Error: Queue error\n        at Object.<anonymous> (C:\\Users\\Steve\\heiniu\\web-app-next\\tests\\unit\\lib\\sync-manager.test.ts:671:56)\n        at Promise.then.completed (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:298:28)\n        at new Promise (<anonymous>)\n        at callAsyncCircusFn (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\utils.js:231:10)\n        at _callCircusTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:316:40)\n        at _runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:252:3)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:126:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at _runTestsForDescribeBlock (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:121:9)\n        at run (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\run.js:71:3)\n        at runAndTransformResultsToJestFormat (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n        at jestAdapter (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n        at runTestInternal (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n        at runTest (C:\\Users\\Steve\\heiniu\\web-app-next\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[36mreturn\u001b[39m\n     \u001b[90m 106 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m   }\n     \u001b[90m 109 |\u001b[39m })\n     \u001b[90m 110 |\u001b[39m\u001b[0m\n\n      at Object.call [as error] (tests/setup.ts:107:19)\n      at SyncManagerImpl.error [as performSync] (src/lib/sync-manager.ts:364:15)\n      at SyncManagerImpl.triggerSync (src/lib/sync-manager.ts:284:5)\n      at Object.<anonymous> (tests/unit/lib/sync-manager.test.ts:673:7)\n\n",
        "error": "FAIL tests/unit/lib/sync-manager.test.ts (11.267 s)\n  SyncManager\n    同步状态管理\n      √ 应该初始化为IDLE状态 (5 ms)\n      √ 应该能够启动同步 (3 ms)\n      √ 应该能够停止同步 (2 ms)\n      √ 应该能够暂停和恢复同步 (3 ms)\n      √ 应该监听状态变化 (2 ms)\n      √ 应该监听进度变化 (3 ms)\n    同步执行\n      √ 应该执行待处理的操作 (3 ms)\n      √ 应该处理执行成功的操作 (2 ms)\n      √ 应该处理执行失败的操作 (2 ms)\n      √ 应该处理不可重试的失败操作 (3 ms)\n      √ 应该处理执行过程中的异常 (8 ms)\n    批量处理\n      √ 应该按配置的批量大小处理操作 (3 ms)\n      ○ skipped 应该控制并发执行数量 - SKIPPED due to timing sensitivity\n    网络状态处理\n      √ 应该在网络离线时暂停同步 (2 ms)\n      √ 应该在网络恢复时恢复同步 (2 ms)\n      √ 应该在离线模式下继续同步 (2 ms)\n      √ 应该在仅在线模式下跳过离线同步 (7 ms)\n    智能调度\n      √ 应该跳过有重试延迟的操作 (3 ms)\n      √ 应该延迟处理低优先级操作 (2 ms)\n      √ 应该在禁用智能调度时处理所有操作 (2 ms)\n    失败操作重试\n      √ 应该定期重试失败的操作 (3 ms)\n      √ 应该跳过不可重试的失败操作 (1 ms)\n    配置管理\n      √ 应该使用自定义配置 (1 ms)\n      √ 应该能够更新配置 (1 ms)\n      √ 更新同步间隔应该重启定时器 (2 ms)\n    统计信息\n      √ 应该提供同步统计信息 (4 ms)\n      √ 应该更新同步统计 (2 ms)\n    定时同步\n      √ 应该根据配置间隔执行同步 (2 ms)\n      √ 应该在暂停时跳过定时同步 (9 ms)\n      × 应该继续定时同步即使发生错误 (10003 ms)\n    错误处理\n      √ 应该处理同步过程中的错误 (4 ms)\n    工具函数\n      √ createSyncManager应该创建同步管理器实例 (2 ms)\n    资源清理\n      √ 应该正确清理资源 (1 ms)\n\n  ● SyncManager › 定时同步 › 应该继续定时同步即使发生错误\n\n    thrown: \"Exceeded timeout of 10000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\n    \u001b[0m \u001b[90m 627 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 628 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 629 |\u001b[39m     test(\u001b[32m'应该继续定时同步即使发生错误'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 630 |\u001b[39m       \u001b[36mlet\u001b[39m callCount \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 631 |\u001b[39m       mockQueue\u001b[33m.\u001b[39mgetPendingOperations\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 632 |\u001b[39m         callCount\u001b[33m++\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      at test (tests/unit/lib/sync-manager.test.ts:629:5)\n      at describe (tests/unit/lib/sync-manager.test.ts:605:3)\n      at Object.describe (tests/unit/lib/sync-manager.test.ts:73:1)\n\nTest Suites: 1 failed, 1 total\nTests:       1 failed, 1 skipped, 31 passed, 33 total\nSnapshots:   0 total\nTime:        13.377 s\nRan all test suites matching /tests\\\\unit\\\\lib\\\\sync-manager.test.ts/i.\n"
      },
      "passed": false,
      "issues": [
        "存储系统JSON序列化/反序列化错误"
      ]
    }
  },
  "p0Status": {
    "memoryFixed": true,
    "testStability": false,
    "passRateAchieved": false,
    "overallP0Success": false
  },
  "p1Status": {
    "syncManagerFixed": false,
    "mockConfigFixed": true,
    "storageFixed": false,
    "overallP1Success": false
  },
  "summary": {
    "timestamp": "2025-05-29T15:05:10.035Z",
    "layersPassed": 3,
    "layersTotal": 5,
    "layerCompletionRate": 60,
    "p0Fixed": false,
    "p1Fixed": false,
    "estimatedCompletion": 27,
    "overallStatus": "NEEDS_WORK"
  }
}